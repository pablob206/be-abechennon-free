"""initialize db

Revision ID: d00307afe0f8
Revises:
Create Date: 2024-05-17 05:00:33.559066+00:00

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "d00307afe0f8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "loans",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("asset", sa.String(length=255), nullable=False),
        sa.Column("amount", sa.FLOAT(), nullable=False),
        sa.Column("trading_type", sa.String(length=150), nullable=False),
        sa.Column("loan_operation_type", sa.String(length=150), nullable=False),
        sa.Column("status", sa.String(length=150), nullable=False),
        sa.Column("tran_id", sa.BIGINT(), nullable=True),
        sa.Column("client_tag", sa.String(length=150), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="be-abechennon-free",
    )
    op.create_index(op.f("ix_be-abechennon-free_loans_id"), "loans", ["id"], unique=False, schema="be-abechennon-free")
    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("pair", sa.String(length=55), nullable=False),
        sa.Column("trading_type", sa.String(length=55), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=True),
        sa.Column("client_order_id", sa.String(length=155), nullable=True),
        sa.Column("transact_time", sa.BIGINT(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("limit_price", sa.Float(), nullable=True),
        sa.Column("orig_qty", sa.Float(), nullable=False),
        sa.Column("executed_qty", sa.Float(), nullable=True),
        sa.Column("cummulative_quote_qty", sa.Float(), nullable=True),
        sa.Column("status", sa.String(length=55), nullable=False),
        sa.Column("time_in_force", sa.String(length=100), nullable=True),
        sa.Column("ord_type", sa.String(length=55), nullable=False),
        sa.Column("side", sa.String(length=15), nullable=False),
        sa.Column("margin_buy_borrow_amount", sa.Float(), nullable=True),
        sa.Column("margin_buy_borrow_asset", sa.String(length=100), nullable=True),
        sa.Column("is_isolated", sa.Boolean(), nullable=False),
        sa.Column("fills", sa.JSON(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="be-abechennon-free",
    )
    op.create_index(
        op.f("ix_be-abechennon-free_orders_id"), "orders", ["id"], unique=False, schema="be-abechennon-free"
    )
    op.create_table(
        "settings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("binance_api_key", sa.String(length=255), nullable=False),
        sa.Column("binance_api_secret", sa.String(length=255), nullable=True),
        sa.Column("pairs", sa.JSON(), nullable=False),
        sa.Column("trading_type", sa.String(length=255), nullable=True),
        sa.Column("order_type", sa.String(length=255), nullable=True),
        sa.Column("max_open_position", sa.Integer(), nullable=True),
        sa.Column("max_open_position_per_coin", sa.Integer(), nullable=True),
        sa.Column("currency_base", sa.String(length=255), nullable=True),
        sa.Column("amount_per_order", sa.Float(), nullable=True),
        sa.Column("take_profit_at", sa.Float(), nullable=True),
        sa.Column("enable_stop_loss", sa.Boolean(), nullable=True),
        sa.Column("stop_loss", sa.Integer(), nullable=True),
        sa.Column("enable_trailing_stop_loss", sa.Boolean(), nullable=True),
        sa.Column("trailing_stop_loss", sa.Integer(), nullable=True),
        sa.Column("time_frame", sa.String(length=255), nullable=True),
        sa.Column("is_real_time", sa.String(length=255), nullable=True),
        sa.Column("close_all_position", sa.Boolean(), nullable=True),
        sa.Column("flag_back_testing", sa.Boolean(), nullable=True),
        sa.Column("invert_signal", sa.Boolean(), nullable=True),
        sa.Column("flag_on_magic", sa.Boolean(), nullable=True),
        sa.Column("magic_amount", sa.Float(), nullable=True),
        sa.Column("bot_status", sa.String(length=255), nullable=True),
        sa.Column("strategy_id", sa.String(length=255), nullable=True),
        sa.Column("strategy_name", sa.String(length=255), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="be-abechennon-free",
    )
    op.create_index(
        op.f("ix_be-abechennon-free_settings_id"), "settings", ["id"], unique=False, schema="be-abechennon-free"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_be-abechennon-free_settings_id"), table_name="settings", schema="be-abechennon-free")
    op.drop_table("settings", schema="be-abechennon-free")
    op.drop_index(op.f("ix_be-abechennon-free_orders_id"), table_name="orders", schema="be-abechennon-free")
    op.drop_table("orders", schema="be-abechennon-free")
    op.drop_index(op.f("ix_be-abechennon-free_loans_id"), table_name="loans", schema="be-abechennon-free")
    op.drop_table("loans", schema="be-abechennon-free")
    # ### end Alembic commands ###
